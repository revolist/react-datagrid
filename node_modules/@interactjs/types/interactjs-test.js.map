{
	"version": 3,
	"sources": [
		"interactjs-test.ts"
	],
	"names": [
		"interact",
		"document",
		"body",
		"window",
		"draggable",
		"inertia",
		"modifiers",
		"snap",
		"targets",
		"x",
		"y",
		"snappers",
		"grid",
		"offset",
		"relativePoints",
		"endOnly",
		"snapSize",
		"width",
		"height",
		"restrictRect",
		"restriction",
		"restrict",
		"_",
		"top",
		"left",
		"bottom",
		"right",
		"restrictSize",
		"min",
		"max",
		"restrictEdges",
		"inner",
		"outer",
		"resizable",
		"myList",
		"querySelector",
		"context",
		"target",
		"maxPerElement",
		"manualStart",
		"autoScroll",
		"lockAxis",
		"startAxis",
		"margin",
		"square",
		"axis",
		"gesturable",
		"element",
		"container",
		"distance",
		"interval",
		"handleEl",
		"edges",
		"invert",
		"squareResize",
		"dropzone",
		"accept",
		"overlap",
		"checker",
		"_dragEvent",
		"_event",
		"dropped",
		"_dropzone",
		"dropElement",
		"_draggable",
		"_draggableElement",
		"hasChildNodes",
		"dynamicDrop",
		"listener",
		"event",
		"type",
		"pageX",
		"pageY",
		"alert",
		"on",
		"gesturestart",
		"gestureend",
		"rect",
		"deltaRect",
		"JSON",
		"stringify",
		"listeners",
		"start",
		"move",
		"end",
		"onstart",
		"onmove",
		"onend",
		"devTools",
		"ignore",
		"boxSizing",
		"touchAction",
		"dropTarget",
		"ondrop",
		"relatedTarget",
		"id",
		"classList",
		"add",
		"location",
		"href",
		"currentTarget",
		"preventDefault"
	],
	"mappings": "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",
	"sourcesContent": [
		"// eslint-disable-next-line node/no-extraneous-import\nimport interact from '@interactjs/interactjs/index'\n\n// Interactables\ninteract(document.body)\ninteract(document)\ninteract(window)\n\ninteract('.drag-and-resize')\n  .draggable({\n    inertia: true,\n    modifiers: [\n      interact.modifiers.snap({\n        targets: [\n          { x: 100, y: 200 },\n          (x: number, y: number) => ({ x: x % 20, y }),\n          interact.snappers.grid({ x: 20, y: 0 }),\n        ],\n        offset: 'startCoords',\n        relativePoints: [{ x: 0, y: 1 }],\n        endOnly: true,\n      }),\n      interact.modifiers.snapSize({\n        targets: [\n          { x: 100, y: 200 },\n          (x: number, y: number) => ({ x: x % 20, y }),\n          interact.snappers.grid({ width: 100, height: 500 }),\n        ],\n        endOnly: true,\n      }),\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true,\n      }),\n      interact.modifiers.restrict({\n        restriction: _ => ({ top: 0, left: 0, bottom: 1, right: 1 }),\n      }),\n      interact.modifiers.restrict({\n        restriction: _ => document.body,\n      }),\n      interact.modifiers.restrictSize({\n        min: document.body,\n        max: 'parent',\n      }),\n      interact.modifiers.restrictEdges({\n        inner: document.body,\n        outer: 'parent',\n      }),\n    ],\n  })\n  .resizable({\n    inertia: true,\n  })\n\n// Selector context\nconst myList: HTMLElement | SVGElement = document.querySelector('#my-list')\n\ninteract('li', {\n  context: myList,\n})\n  .draggable({ /* ... */ })\n\n// Action options\nconst target = 'li'\ninteract(target)\n  .draggable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n    inertia      : {/* ... */},\n    autoScroll   : {/* ... */},\n\n    lockAxis     : 'x' || 'y' || 'start',\n    startAxis    : 'x' || 'y',\n  })\n  .resizable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n    inertia      : {/* ... */},\n    autoScroll   : {/* ... */},\n    margin       : 50,\n\n    square       : true || false,\n    axis         : 'x' || 'y',\n  })\n  .gesturable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n  })\n\n// autoscroll\nconst element = 'li'\ninteract(element)\n  .draggable({\n    autoScroll: true,\n  })\n  .resizable({\n    autoScroll: {\n      container: document.body,\n      margin: 50,\n      distance: 5,\n      interval: 10,\n    },\n  })\n\n// axis\ninteract(target).draggable({\n  startAxis: 'x',\n  lockAxis: 'y',\n}).draggable({\n  startAxis: 'xy',\n  lockAxis: 'x',\n})\n\ninteract(target).resizable({\n  axis: 'x',\n})\n\nconst handleEl = 'li'\ninteract(target).resizable({\n  edges: {\n    top   : true,       // Use pointer coords to check for resize.\n    left  : false,      // Disable resizing from left edge.\n    bottom: '.resize-s', // Resize if pointer target matches selector\n    right : handleEl,    // Resize if pointer target is the given Element\n  },\n})\n\n// resize invert\ninteract(target).resizable({\n  edges: { bottom: true, right: true },\n  invert: 'reposition',\n})\n\n// resize square\ninteract(target).resizable({\n  squareResize: true,\n})\n\n// dropzone  accept\ninteract(target).dropzone({\n  accept: '.drag0, .drag1',\n})\n\n// dropzone overlap\ninteract(target).dropzone({\n  overlap: 0.25,\n})\n\n// dropzone checker\ninteract(target).dropzone({\n  checker (\n    _dragEvent: Interact.Element,           // related dragmove or dragend\n    _event: Event,                          // Touch, Pointer or Mouse Event\n    dropped: boolean,                       // bool default checker result\n    _dropzone: Interact.Interactable,       // dropzone Interactable\n    dropElement: Interact.Element,          // dropzone elemnt\n    _draggable: Interact.Interactable,      // draggable Interactable\n    _draggableElement: Interact.Element) {  // draggable element\n    // only allow drops into empty dropzone elements\n    return dropped && !dropElement.hasChildNodes()\n  },\n})\n\ninteract.dynamicDrop()\ninteract.dynamicDrop(false)\n\n// Events\nfunction listener (event) {\n  const { type, pageX, pageY } = event\n  alert({ type, pageX, pageY })\n}\n\ninteract(target)\n  .on('dragstart', listener)\n  .on('dragmove dragend', listener)\n  .on(['resizemove', 'resizeend'], listener)\n  .on({\n    gesturestart: listener,\n    gestureend: listener,\n  })\n\ninteract.on('resize', (event: Interact.ResizeEvent) => {\n  const { rect, deltaRect } = event\n  alert(JSON.stringify({ rect, deltaRect }))\n})\n\ninteract(target).resizable({\n  listeners: [\n    { start: listener, move: listener },\n  ],\n})\n\ninteract(target).draggable({\n  listeners: { start: listener, end: listener },\n})\n\ninteract(target).draggable({\n  onstart: listener,\n  onmove: listener,\n  onend: listener,\n})\n\ninteract.on(['dragmove', 'resizestart'], listener)\n\n// devTools options\ninteract(target).devTools({\n  ignore: { boxSizing: true, touchAction: true },\n})\n\nconst dropTarget = 'div'\n// Drop Events\ninteract(dropTarget)\n  .dropzone({\n    ondrop (event) {\n      alert(event.relatedTarget.id +\n            ' was dropped into ' +\n            event.target.id)\n    },\n  })\n  .on('dropactivate', event => {\n    event.target.classList.add('drop-activated')\n  })\n\ninteract(target).on('up', _event => {})\n\n// fast click\ninteract('a[href]').on('tap', event => {\n  window.location.href = event.currentTarget.href\n\n  event.preventDefault()\n})\n"
	]
}