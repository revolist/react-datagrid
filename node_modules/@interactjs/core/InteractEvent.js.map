{
	"version": 3,
	"sources": [
		"InteractEvent.ts"
	],
	"names": [
		"extend",
		"getOriginXY",
		"hypot",
		"BaseEvent",
		"defaults",
		"EventPhase",
		"InteractEvent",
		"constructor",
		"interaction",
		"event",
		"actionName",
		"phase",
		"element",
		"related",
		"preEnd",
		"type",
		"target",
		"interactable",
		"deltaSource",
		"options",
		"origin",
		"starting",
		"ending",
		"prevEvent",
		"coords",
		"start",
		"page",
		"client",
		"timeStamp",
		"cur",
		"rect",
		"x",
		"y",
		"ctrlKey",
		"altKey",
		"shiftKey",
		"metaKey",
		"button",
		"buttons",
		"currentTarget",
		"relatedTarget",
		"t0",
		"pointers",
		"length",
		"downTime",
		"x0",
		"y0",
		"clientX0",
		"clientY0",
		"delta",
		"dt",
		"duration",
		"velocity",
		"speed",
		"swipe",
		"getSwipe",
		"pageX",
		"value",
		"pageY",
		"clientX",
		"clientY",
		"dx",
		"dy",
		"velocityX",
		"velocityY",
		"_interaction",
		"angle",
		"Math",
		"atan2",
		"PI",
		"overlap",
		"left",
		"up",
		"right",
		"down",
		"preventDefault",
		"stopImmediatePropagation",
		"immediatePropagationStopped",
		"propagationStopped",
		"stopPropagation"
	],
	"mappings": "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",
	"sourcesContent": [
		"import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport BaseEvent from './BaseEvent'\nimport defaults from './defaultOptions'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class InteractEvent<\n  T extends ActionName = any,\n  P extends EventPhase = EventPhase._NONE,\n> extends BaseEvent<T> {\n  target: Interact.Element\n  currentTarget: Interact.Element\n  relatedTarget: Interact.Element\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Interact.FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Interact.Element\n  dragLeave?: Interact.Element\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Interact.Element,\n    related?: Interact.Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.relatedTarget = related || null\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  get pageX () { return this.page.x }\n  set pageX (value) { this.page.x = value }\n  get pageY () { return this.page.y }\n  set pageY (value) { this.page.y = value }\n\n  get clientX () { return this.client.x }\n  set clientX (value) { this.client.x = value }\n  get clientY () { return this.client.y }\n  set clientY (value) { this.client.y = value }\n\n  get dx () { return this.delta.x }\n  set dx (value) { this.delta.x = value }\n  get dy () { return this.delta.y }\n  set dy (value) { this.delta.y = value }\n\n  get velocityX () { return this.velocity.x }\n  set velocityX (value) { this.velocity.x = value }\n  get velocityY () { return this.velocity.y }\n  set velocityY (value) { this.velocity.y = value }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\nexport default InteractEvent\n"
	]
}