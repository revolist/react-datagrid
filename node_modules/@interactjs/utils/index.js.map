{
	"version": 3,
	"sources": [
		"index.ts"
	],
	"names": [
		"arr",
		"dom",
		"is",
		"pointer",
		"rect",
		"win",
		"warnOnce",
		"method",
		"message",
		"warned",
		"window",
		"console",
		"warn",
		"apply",
		"arguments",
		"_getQBezierValue",
		"t",
		"p1",
		"p2",
		"p3",
		"iT",
		"getQuadraticCurvePoint",
		"startX",
		"startY",
		"cpX",
		"cpY",
		"endX",
		"endY",
		"position",
		"x",
		"y",
		"easeOutQuad",
		"b",
		"c",
		"d",
		"copyAction",
		"dest",
		"src",
		"name",
		"axis",
		"edges",
		"default",
		"browser",
		"clone",
		"events",
		"extend",
		"getOriginXY",
		"hypot",
		"normalizeListeners",
		"raf"
	],
	"mappings": "AAAA,OAAO,KAAKA,GAAZ;AACA,OAAO,KAAKC,GAAZ;AACA,OAAO,KAAKC,EAAZ;AACA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,IAAZ;AACA,OAAOC,GAAP;AAEA,OAAO,SAASC,QAAT,CAA+BC,MAA/B,EAAgEC,OAAhE,EAAiF;AACtF,MAAIC,MAAM,GAAG,KAAb,CADsF,CAGtF;;AACA,SAAO,YAAmB;AACxB,QAAI,CAACA,MAAL,EAAa;AACVJ,MAAAA,GAAD,CAAaK,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiCJ,OAAjC;AACAC,MAAAA,MAAM,GAAG,IAAT;AACD;;AAED,WAAOF,MAAM,CAACM,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AACD,GAPD;AAQD,C,CAED;;AACA,OAAO,SAASC,gBAAT,CAA2BC,CAA3B,EAAsCC,EAAtC,EAAkDC,EAAlD,EAA8DC,EAA9D,EAA0E;AAC/E,QAAMC,EAAE,GAAG,IAAIJ,CAAf;AACA,SAAOI,EAAE,GAAGA,EAAL,GAAUH,EAAV,GAAe,IAAIG,EAAJ,GAASJ,CAAT,GAAaE,EAA5B,GAAiCF,CAAC,GAAGA,CAAJ,GAAQG,EAAhD;AACD;AAED,OAAO,SAASE,sBAAT,CACLC,MADK,EACWC,MADX,EAC2BC,GAD3B,EACwCC,GADxC,EACqDC,IADrD,EACmEC,IADnE,EACiFC,QADjF,EACmG;AACxG,SAAO;AACLC,IAAAA,CAAC,EAAGd,gBAAgB,CAACa,QAAD,EAAWN,MAAX,EAAmBE,GAAnB,EAAwBE,IAAxB,CADf;AAELI,IAAAA,CAAC,EAAGf,gBAAgB,CAACa,QAAD,EAAWL,MAAX,EAAmBE,GAAnB,EAAwBE,IAAxB;AAFf,GAAP;AAID,C,CAED;;AACA,OAAO,SAASI,WAAT,CAAsBf,CAAtB,EAAiCgB,CAAjC,EAA4CC,CAA5C,EAAuDC,CAAvD,EAAkE;AACvElB,EAAAA,CAAC,IAAIkB,CAAL;AACA,SAAO,CAACD,CAAD,GAAKjB,CAAL,IAAUA,CAAC,GAAG,CAAd,IAAmBgB,CAA1B;AACD;AAED,OAAO,SAASG,UAAT,CAAqBC,IAArB,EAAiDC,GAAjD,EAA4E;AACjFD,EAAAA,IAAI,CAACE,IAAL,GAAaD,GAAG,CAACC,IAAjB;AACAF,EAAAA,IAAI,CAACG,IAAL,GAAaF,GAAG,CAACE,IAAjB;AACAH,EAAAA,IAAI,CAACI,KAAL,GAAaH,GAAG,CAACG,KAAjB;AAEA,SAAOJ,IAAP;AACD;AAED,SAASK,OAAO,IAAIC,OAApB;AACA,SAASD,OAAO,IAAIE,KAApB;AACA,SAASF,OAAO,IAAIG,MAApB;AACA,SAASH,OAAO,IAAII,MAApB;AACA,SAASJ,OAAO,IAAIK,WAApB;AACA,SAASL,OAAO,IAAIM,KAApB;AACA,SAASN,OAAO,IAAIO,kBAApB;AACA,SAASP,OAAO,IAAIQ,GAApB;AACA,SAAS5C,GAAT,EAAcL,GAAd,EAAmBC,GAAnB,EAAwBC,EAAxB,EAA4BC,OAA5B,EAAqCC,IAArC",
	"sourcesContent": [
		"import * as arr from './arr'\nimport * as dom from './domUtils'\nimport * as is from './is'\nimport * as pointer from './pointerUtils'\nimport * as rect from './rect'\nimport win from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  // eslint-disable-next-line no-shadow\n  return function (this: T) {\n    if (!warned) {\n      (win as any).window.console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nexport function _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nexport function getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nexport function easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport { default as browser } from './browser'\nexport { default as clone } from './clone'\nexport { default as events } from './events'\nexport { default as extend } from './extend'\nexport { default as getOriginXY } from './getOriginXY'\nexport { default as hypot } from './hypot'\nexport { default as normalizeListeners } from './normalizeListeners'\nexport { default as raf } from './raf'\nexport { win, arr, dom, is, pointer, rect }\n"
	]
}