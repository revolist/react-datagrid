/**
* Storing initial data and column information
*/
import { ObservableMap } from '@stencil/store';
import { RevoGrid } from "../../interfaces";
declare type Group = {
    name: string;
    ids: (string | number)[];
};
export declare type Groups = {
    [level: number]: Group[];
};
export declare type DataSourceState<T extends (RevoGrid.DataType | RevoGrid.ColumnDataSchemaRegular)> = {
    items: T[];
    groupingDepth: number;
    groups: Groups;
};
export default class DataStore<T extends RevoGrid.DataType | RevoGrid.ColumnDataSchemaRegular> {
    private readonly dataStore;
    get store(): ObservableMap<DataSourceState<T>>;
    constructor();
    updateData(items: T[], grouping?: {
        depth: number;
        groups: Groups;
    }): void;
}
export {};
