import { ObservableMap } from '@stencil/store';
import { Edition, Selection } from '../../interfaces';
import { State } from '../../services/selection.store.connector';
import Cell = Selection.Cell;
import EditCell = Edition.EditCell;
import SelectionStoreConnectorI = Selection.SelectionStoreConnectorI;
export default class SelectionStore {
    private selectionStoreConnector;
    readonly store: ObservableMap<State>;
    constructor(lastCell: Cell, storePosition: Cell, selectionStoreConnector: SelectionStoreConnectorI);
    get focused(): Cell | null;
    get edited(): EditCell | null;
    setLastCell(lastCell: Cell): void;
    setRange(start: Cell, end: Cell): void;
    setTempRange(start: Cell, end: Cell): void;
    change(area: Partial<Cell>, isMulti?: boolean): void;
    focus(cell?: Cell, isMulti?: boolean): void;
    destroy(): void;
}
