import DimensionStore from '../store/dimension/dimension.store';
import ViewportProvider from "./viewport.provider";
import { RevoGrid } from "../interfaces";
declare type DimensionStores = {
    [T in RevoGrid.MultiDimensionType]: DimensionStore;
};
export default class DimensionProvider {
    private viewports;
    readonly stores: DimensionStores;
    constructor(viewports: ViewportProvider);
    setDimensionSize(dimensionType: RevoGrid.MultiDimensionType, sizes: RevoGrid.ViewSettingSizeProp): void;
    setRealSize(items: RevoGrid.ColumnDataSchemaRegular[] | RevoGrid.DataType[], dimensionType: RevoGrid.MultiDimensionType): void;
    setPins(items: RevoGrid.ColumnDataSchemaRegular[] | RevoGrid.DataType[], dimensionType: RevoGrid.MultiDimensionType, pinSizes?: RevoGrid.ViewSettingSizeProp): void;
    setViewPortCoordinate(e: RevoGrid.ViewPortScrollEvent): void;
    setSettings(data: Partial<RevoGrid.DimensionSettingsState>, dimensionType: RevoGrid.DimensionType): void;
}
export {};
