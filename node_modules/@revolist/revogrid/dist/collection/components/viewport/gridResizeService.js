export default class GridResizeService {
    constructor(el, events) {
        this.events = events;
        this.resizeObserver = null;
        this.init(el);
    }
    async init(el) {
        var _a;
        if (!('ResizeObserver' in window)) {
            const module = await import('@juggle/resize-observer');
            window.ResizeObserver = module.ResizeObserver;
        }
        this.resizeObserver = new ResizeObserver(async () => {
            var _a;
            (_a = this.events) === null || _a === void 0 ? void 0 : _a.resize();
        });
        (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.observe(el);
    }
    destroy() {
        var _a;
        (_a = this.resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();
        this.resizeObserver = null;
    }
}
