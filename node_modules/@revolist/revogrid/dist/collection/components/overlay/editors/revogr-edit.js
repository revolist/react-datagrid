import { Component, Event, Prop, h } from '@stencil/core';
import { getItemByIndex } from '../../../store/dimension/dimension.helpers';
export class Edit {
    constructor() {
        this.editCell = null;
    }
    onSave(e) {
        e.stopPropagation();
        if (this.editCell) {
            this.cellEdit.emit({
                col: this.editCell.x,
                row: this.editCell.y,
                val: e.detail
            });
        }
        setTimeout(() => this.closeEdit.emit(), 0);
    }
    render() {
        if (!this.editCell) {
            return '';
        }
        const x = this.editCell.x;
        const y = this.editCell.y;
        const col = getItemByIndex(this.dimensionCol.state, x);
        const row = getItemByIndex(this.dimensionRow.state, y);
        const style = {
            left: `${col.start}px`,
            top: `${row.start}px`,
            width: `${col.end - col.start}px`,
            height: `${row.end - row.start}px`
        };
        return h("div", { style: style, class: 'edit-input-wrapper' },
            h("revogr-text-editor", { value: this.editCell.val, onEdit: (e) => this.onSave(e) }));
    }
    static get is() { return "revogr-edit"; }
    static get properties() { return {
        "dimensionRow": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ObservableMap<RevoGrid.DimensionSettingsState>",
                "resolved": "ObservableMap<DimensionSettingsState>",
                "references": {
                    "ObservableMap": {
                        "location": "import",
                        "path": "@stencil/store"
                    },
                    "RevoGrid": {
                        "location": "import",
                        "path": "../../../interfaces"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "dimensionCol": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ObservableMap<RevoGrid.DimensionSettingsState>",
                "resolved": "ObservableMap<DimensionSettingsState>",
                "references": {
                    "ObservableMap": {
                        "location": "import",
                        "path": "@stencil/store"
                    },
                    "RevoGrid": {
                        "location": "import",
                        "path": "../../../interfaces"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "editCell": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Edition.EditCell|null",
                "resolved": "EditCell",
                "references": {
                    "Edition": {
                        "location": "import",
                        "path": "../../../interfaces"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "null"
        }
    }; }
    static get events() { return [{
            "method": "cellEdit",
            "name": "cellEdit",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "Edition.SaveDataDetails",
                "resolved": "{ row: number; col: number; val: string; }",
                "references": {
                    "Edition": {
                        "location": "import",
                        "path": "../../../interfaces"
                    }
                }
            }
        }, {
            "method": "closeEdit",
            "name": "closeEdit",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
}
